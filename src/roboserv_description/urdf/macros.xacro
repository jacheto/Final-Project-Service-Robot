<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

	<!--Criando um cilindro-->
	<macro name="create_cylinder" params="name radius height pos_x pos_y pos_z wr wp wy density">
		<xacro:property name="mass" value="${radius*radius*pi*height*density}"/>
		<collision name="${name}_collision">
			<origin xyz = "${pos_x} ${pos_y} ${pos_z}" rpy="${wr} ${wp} ${wy}"/>
			<geometry>
				<cylinder radius="${radius}" length="${height}"/>
			</geometry>
		</collision>
		<visual name="${name}_visual">
			<origin xyz = "${pos_x} ${pos_y} ${pos_z}" rpy="${wr} ${wp} ${wy}"/>
			<geometry>
				<cylinder radius="${radius}" length="${height}"/>
			</geometry>
		</visual>
		<inertial>
			<origin xyz = "${pos_x} ${pos_y} ${pos_z}" rpy="${wr} ${wp} ${wy}"/>
			<mass value="${mass}"/>
			<inertia  
				ixx="${mass*(3*radius*radius+height*height)/12}" ixy = "0" ixz = "0"
				iyy="${mass*(3*radius*radius+height*height)/12}" iyz = "0"
				izz="${mass*radius*radius/2}" />
		</inertial>
	</macro>

	<!--Criando uma peÃ§a-->
	<macro name="create_mesh" params="name size_x size_y size_z dist_x dist_y dist_z wr wp wy density">
		<xacro:property name="radius" value="${(size_x+size_y)/4}"/>
		<xacro:property name="mass" value="${radius*radius*pi*size_z*density*0.6}"/>
		<collision name="${name}_collision">
			<origin xyz = "${dist_x-size_x/2} ${dist_y-size_y/2} ${dist_z-size_z}" rpy="${wr} ${wp} ${wy}"/>
			<geometry>
				<cylinder radius="${radius}" length="${size_z}"/>
			</geometry>
		</collision>
		<visual name="${name}_visual">
			<origin xyz = "${dist_x-size_x} ${-dist_y+size_y} ${dist_z-size_z}" rpy="${wr-pi/2} ${wp} ${wy-pi/2}"/>
			<geometry>
				<mesh filename="package://roboserv_description/urdf/models/dae/${name}.dae" scale="0.001 0.001 0.001"/>
			</geometry>
		</visual>
		<inertial>
			<origin xyz = "${dist_x-size_x/2} ${dist_y-size_y/2} ${dist_z-size_z}" rpy="${wr} ${wp} ${wy}"/>
			<mass value="${mass}"/>
			<inertia  
				ixx="${mass*(3*radius*radius+size_z*size_z)/12}" ixy = "0" ixz = "0"
				iyy="${mass*(3*radius*radius+size_z*size_z)/12}" iyz = "0"
				izz="${mass*radius*radius/2}" />
		</inertial>
	</macro>
	
	<!--Criando uma caixa-->
	<macro name="create_box" params="name mass size_x size_y size_z px py pz wr wp wy">
		<collision name="${name}_collision">
			<origin xyz = "${px} ${py} ${pz}" rpy="${wr} ${wp} ${wy}"/>
			<geometry>
				<box size="${size_x} ${size_y} ${size_z}"/>
			</geometry>
		</collision>
		<visual name="${name}_visual">
			<origin xyz = "${px} ${py} ${pz}" rpy="${wr} ${wp} ${wy}"/>
			<geometry>
				<box size="${size_x} ${size_y} ${size_z}"/>
			</geometry>
		</visual>
		<inertial>
			<origin xyz = "${px} ${py} ${pz+0.1}" rpy="${wr} ${wp} ${wy}"/>
			<mass value="${mass}"/>
			<inertia
				ixx="${mass*(size_y*size_y+size_z*size_z)/12}" ixy = "0" ixz = "0"
				iyy="${mass*(size_x*size_x+size_z*size_z)/12}" iyz = "0"
				izz="${mass*(size_x*size_x+size_z*size_z)/12}" />
		</inertial>
		<material name="black">
			<color rgba="0 0 0 0"/>
		</material>
	</macro>
	
	<!--Criando uma esfera-->
	<macro name="create_sphere" params="name mass radius px py pz wr wp wy">
		<collision name="${name}_collision">
			<origin xyz = "${px} ${py} ${pz}" rpy="${wr} ${wp} ${wy}"/>
			<geometry>
				<sphere radius="${radius}"/>
			</geometry>
			<surface>
				<friction>
					<ode>
						<mu>0</mu>
						<mu2>0</mu2>
						<slip1>1.0</slip1>
						<slip2>1.0</slip2>
					</ode>
				</friction>
			</surface>
		</collision>
		<visual name="${name}_visual">
			<origin xyz = "${px} ${py} ${pz}" rpy="${wr} ${wp} ${wy}"/>
			<geometry>
				<sphere radius="${radius}"/>
			</geometry>
		</visual>
		<inertial>
			<origin xyz = "${px} ${py} ${pz}" rpy="${wr} ${wp} ${wy}"/>
			<mass value="${mass}"/>
			<inertia  
				ixx="${mass*radius*radius*2/5}" ixy = "0" ixz = "0"
				iyy="${mass*radius*radius*2/5}" iyz = "0"
				izz="${mass*radius*radius*2/5}" />
		</inertial>
	</macro>

	<!--Criando uma roda-->
	<macro name="create_wheel" params="name mass radius length body_name body_size_y wheel_pos_z wheel_pos_x wheel_side whell_spacing">
		
		<!--Cria um cilindro-->
		<link name="${name}">
			<create_cylinder name="${name}" radius="${radius}" height="${length}" pos_x="0" pos_y="0" pos_z="0" wr="0" wp="${pi/2}" wy="${pi/2}" density="600"/>
		</link>
		
		<!--Cria a juncao com o corpo-->
		<joint name="${name}_hinge" type="continuous">
			<parent link="${body_name}"/>
			<child link="${name}"/>
			<origin xyz="0 ${(length/2+body_size_y/2+whell_spacing)*wheel_side} ${wheel_pos_z}" rpy="0 0 0" />
			<axis xyz="0 1 0" rpy="0 0 0" />
			<limit effort="10000" velocity="10000"/>
			<joint_properties damping="1.0" friction="1.0"/>
		</joint>
		
		<!--Cria uma configuracao de transmissao-->
		<transmission name="${name}_trans">
			<type>transmission_interface/SimpleTransmission</type>
			<joint name="${name}_hinge">
				<hardwareInterface>EffortJointInterface</hardwareInterface>
			</joint>
			<actuator name="${name}_motor">
				<hardwareInterface>EffortJointInterface</hardwareInterface>
				<mechanicalReduction>10</mechanicalReduction>
			</actuator>
		</transmission>
		
	</macro>

	<!--Criando um sensor de distancia-->
	<macro name="create_ir" params="name body_name lenght height ang_degree">
		<joint name="${name}" type="fixed">
			<axis xyz="0 1 0" />
			<origin rpy="0 0 ${ang_degree*pi/180}" xyz="${lenght*cos(ang_degree*pi/180)} ${lenght*sin(ang_degree*pi/180)} ${height}" />
			<parent link="${body_name}"/>
			<child link="${name}"/>
		</joint>
		<link name="${name}">
			<visual>
				<origin xyz="0 0 0" rpy="0 0 0"/>
				<geometry>
					<box size="0.01 0.01 0.01"/>
				</geometry>
			</visual>
			<collision>
				<origin xyz="0 0 0" rpy="0 0 0"/>
				<geometry>
					<box size="0.01 0.01 0.01"/>
				</geometry>
			</collision>
			<inertial>
				<mass value="1e-5" />
				<origin xyz="0 0 0" rpy="0 0 0"/>
				<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
			</inertial>
		</link>
		
	</macro>

	
</robot>
