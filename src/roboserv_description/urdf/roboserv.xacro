<?xml version='1.0'?>

<robot name="roboserv" xmlns:xacro="http://www.ros.org/wiki/xacro">
	
	<!--Incluir os outros arquivos necessarios-->
	<xacro:include filename="$(find roboserv_description)/urdf/roboserv.gazebo" />
	<xacro:include filename="$(find roboserv_description)/urdf/materials.xacro" />
	<xacro:include filename="$(find roboserv_description)/urdf/macros.xacro" />
	
	<xacro:property name="robot_name" value="robo_link" />
	
	<xacro:property name="body_size_x" value="0.4" />
	<xacro:property name="body_size_y" value="0.2" />
	<xacro:property name="body_size_z" value="0.1" />
	<xacro:property name="body_mass" value="5.0" />
	
	<xacro:property name="caster_radius" value="0.05" />
	<xacro:property name="caster_mass" value="1.0" />
	
	<xacro:property name="wheel_radius" value="0.1" />
	<xacro:property name="wheel_length" value="0.05" />
	<xacro:property name="wheel_mass" value="5.0" />
	
	<!--Corpo do robo-->
	<link name="${robot_name}">
		
		<!--Posicao inicial do carro-->
    	<pose>0 0 0.1 0 0 0</pose>
		
		<!--Chassi-->
		<xacro:create_box name="chassis" mass="${body_mass}" size_x="${body_size_x}" size_y="${body_size_y}" size_z="${body_size_z}"
						  px="0" py="0" pz="0" wr="0" wp="0" wy="0"/>
	
		<!--Roda esferica frontal-->
		<xacro:create_sphere name="caster" mass="${caster_mass}" radius="${caster_radius}"
						  px="-0.15" py="0" pz="-0.05" wr="0" wp="0" wy="0"/>
	</link>

	<!--Roda esquerda-->
	<xacro:create_wheel name="left_wheel" mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}" 
						body_name="${robot_name}" body_size_x="${body_size_x}" body_size_y="${body_size_y}" 
						wheel_pos_x="0.015" wheel_side = "1" whell_spacing="0.02"/>
	
	<!--Roda direita-->
	<xacro:create_wheel name="right_wheel" mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}" 
						body_name="${robot_name}" body_size_x="${body_size_x}" body_size_y="${body_size_y}" 
						wheel_pos_x="0.015" wheel_side = "-1" whell_spacing="0.02"/>
	
	<!--Kinect-->
	
	<!--Declarando as propriedades-->
	<xacro:property name="kinect_cam_py" value="-0.0125"/>
	<xacro:property name="cam_px" value="0.18" />
	<xacro:property name="cam_py" value="-0.0125" />
	<xacro:property name="cam_pz" value="0.0870" />
	<xacro:property name="cam_or" value="0" />
	<xacro:property name="cam_op" value="0" />
	<xacro:property name="cam_oy" value="0" />
	
	<!--Criando as juncoes-->
	
	<!--Chassi -> Camera RGB-->
	<joint name="camera_rgb_joint" type="fixed">
		<origin xyz="${cam_px} ${cam_py} ${cam_pz}" rpy="${cam_or} ${cam_op} ${cam_oy}"/>
		<parent link="${robot_name}"/>
		<child link="camera_rgb_frame" />
	</joint>
	
	<!--Camera RGB -> Camera link (corpo do Kinect)-->
	<joint name="camera_joint" type="fixed">
		<origin xyz="-0.031 ${-kinect_cam_py} -0.016" rpy="0 0 0"/>
		<parent link="camera_rgb_frame"/>
		<child link="camera_link"/>
	</joint>
	
	<!--Camera RGB -> Camera RGB optica-->
	<joint name="camera_rgb_optical_joint" type="fixed">
		<origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
		<parent link="camera_rgb_frame" />
		<child link="camera_rgb_optical_frame" />
	</joint>
	
	<!--Camera RGB -> Camera de profundidade-->
	<joint name="camera_depth_joint" type="fixed">
		<origin xyz="0 ${2 * -kinect_cam_py} 0" rpy="0 0 0" />
		<parent link="camera_rgb_frame" />
		<child link="camera_depth_frame" />
	</joint>
	
	<!--Camera de profundidade -> Camera de profundidade optica-->
	<joint name="camera_depth_optical_joint" type="fixed">
		<origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
		<parent link="camera_depth_frame" />
		<child link="camera_depth_optical_frame" />
	</joint>
	
	<!--Criando os frames-->
	<link name="camera_rgb_frame"/>
	<link name="camera_rgb_optical_frame"/>
	<link name="camera_depth_frame"/>
	<link name="camera_depth_optical_frame"/>
	
	<!--Criando o corpo do Kinect-->
	<link name="camera_link">
		<visual>
			<origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
			<geometry>
				<mesh filename="package://turtlebot_description/meshes/sensors/kinect.dae"/>
			</geometry>
		</visual>
		<collision>
			<origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
			<geometry>
				<box size="0.07271 0.27794 0.073"/>
			</geometry>
		</collision>
	</link>
	
	<turtlebot_sim_3dsensor/>
	
</robot>
