<?xml version='1.0'?>

<robot name="roboserv" xmlns:xacro="http://www.ros.org/wiki/xacro">


<!--Incluir os outros arquivos necessarios-->

  <xacro:include filename="$(find roboserv_description)/urdf/roboserv.gazebo" />
  <xacro:include filename="$(find roboserv_description)/urdf/materials.xacro" />
  <xacro:include filename="$(find roboserv_description)/urdf/macros.xacro" />

<!-- ESTRUTURA DO ROBO -->

<!--Chassi-->

  <link name='chassis'>
    <pose>0 0 0.1 0 0 0</pose>

    <inertial>
      <mass value="10.0"/>
      <origin xyz="0.0 0 0.1" rpy=" 0 0 0"/>
      <inertia
          ixx="0.5" ixy="0" ixz="0"
          iyy="1.0" iyz="0"
          izz="0.1"
      />
    </inertial>

    <collision name='collision'>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </collision>

    <visual name='chassis_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </visual>


<!--Roda esferica frontal-->

    <collision name='caster_collision'>
      <origin xyz="-0.15 0 -0.05" rpy=" 0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>

    <visual name='caster_visual'>
      <origin xyz="-0.15 0 -0.05" rpy=" 0 0 0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </visual>
  </link>


<!--Roda esquerda-->

  <link name="left_wheel">
    <!--origin xyz="0.1 0.13 0.1" rpy="0 1.5707 1.5707"/-->
    <collision name="collision">
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
    </collision>
    <visual name="left_wheel_visual">
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <mass value="5"/>
      <cylinder_inertia m="5" r="0.1" h="0.05"/>
      <inertia
        ixx="1.0" ixy="0.0" ixz="0.0"
        iyy="1.0" iyz="0.0"
        izz="1.0"/>
    </inertial>
  </link>


<!--Roda direita-->

  <link name="right_wheel">
    <!--origin xyz="0.1 -0.13 0.1" rpy="0 1.5707 1.5707"/-->
    <collision name="collision">
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
    </collision>
    <visual name="right_wheel_visual">
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <geometry>
        <cylinder radius="0.1" length="0.05"/>
      </geometry>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <mass value="5"/>
      <cylinder_inertia m="5" r="0.1" h="0.05"/>
      <inertia
        ixx="1.0" ixy="0.0" ixz="0.0"
        iyy="1.0" iyz="0.0"
        izz="1.0"/>
    </inertial>
  </link>



<!-- JUNCOES -->

<!--Roda esquerda : Chassi-->

  <joint type="continuous" name="left_wheel_hinge">
    <origin xyz="0.1 0.15 0" rpy="0 0 0"/>
    <child link="left_wheel"/>
    <parent link="chassis"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>


<!--Roda direita : Chassi-->

  <joint type="continuous" name="right_wheel_hinge">
    <origin xyz="0.1 -0.15 0" rpy="0 0 0"/>
    <child link="right_wheel"/>
    <parent link="chassis"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

<!-- PLUGINS -->

<!--Kinect-->
	
  <xacro:property name="kinect_cam_py" value="-0.0125"/>
  <!-- Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
	
	<xacro:property name="cam_px" value="0.18" />
    <xacro:property name="cam_py" value="-0.0125" />
	<xacro:property name="cam_pz" value="0.0870" />
	<xacro:property name="cam_or" value="0" />
	<xacro:property name="cam_op" value="0" />
	<xacro:property name="cam_oy" value="0" />
	
    <joint name="camera_rgb_joint" type="fixed">
      <origin xyz="${cam_px} ${cam_py} ${cam_pz}" rpy="${cam_or} ${cam_op} ${cam_oy}"/>
      <parent link="chassis"/>
      <child link="camera_rgb_frame" />
    </joint>
    <link name="camera_rgb_frame"/>

    <joint name="camera_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
      <parent link="camera_rgb_frame" />
      <child link="camera_rgb_optical_frame" />
    </joint>
    <link name="camera_rgb_optical_frame"/>

    <joint name="camera_joint" type="fixed">
      <origin xyz="-0.031 ${-kinect_cam_py} -0.016" rpy="0 0 0"/>
      <parent link="camera_rgb_frame"/>
      <child link="camera_link"/>
    </joint>  
      <link name="camera_link">
      <visual>
       <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
        <geometry>
         <mesh filename="package://turtlebot_description/meshes/sensors/kinect.dae"/>
        </geometry>
      </visual>
  	  <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  	    <geometry>
  	      <box size="0.07271 0.27794 0.073"/>
  	    </geometry>
  	  </collision>
      <inertial>
        <mass value="0.564" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                 iyy="0.000498940" iyz="0.0"
                 izz="0.003879257" />
      </inertial>
    </link>

    <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch 
         files. However, for Gazebo simulation we need them, so we add them here.
         (Hence, don't publish them additionally!) -->
	<joint name="camera_depth_joint" type="fixed">
	  <origin xyz="0 ${2 * -kinect_cam_py} 0" rpy="0 0 0" />
	  <parent link="camera_rgb_frame" />
	  <child link="camera_depth_frame" />
	</joint>
	<link name="camera_depth_frame"/>

	<joint name="camera_depth_optical_joint" type="fixed">
	  <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
	  <parent link="camera_depth_frame" />
	  <child link="camera_depth_optical_frame" />
	</joint>
	<link name="camera_depth_optical_frame"/>
	
	<!-- Kinect sensor for simulation -->
	<turtlebot_sim_3dsensor/>

	
	
</robot>
